{"version":3,"sources":["Task.jsx","Column.jsx","initial-data.js","index.js"],"names":["Container","styled","div","props","isDragging","Tasks","draggableId","this","task","id","index","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","content","React","Component","Title","h3","TaskList","isDraggingOver","Column","column","title","droppableId","droppableProps","tasks","map","idx","key","placeholder","initialData","columns","taskIds","columnOrder","App","useState","data","setData","onDragEnd","result","document","body","style","color","destination","source","startingColumn","endingColumn","startTaskIds","Array","from","splice","newStart","finishTaskIds","newFinish","newData","newTaskIds","newColumn","columnId","taskId","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.df54eb43.chunk.js","sourcesContent":["import { Draggable } from \"react-beautiful-dnd\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  padding: 1em;\n  margin: 1em;\n  border: 1px solid lightgrey;\n  border-radius: 0.2em;\n  background-color: ${(props) => (props.isDragging ? \"lightgreen\" : \"white\")};\n`;\n\nexport default class Tasks extends React.Component {\n  render() {\n    return (\n      <Draggable draggableId={this.props.task.id} index={this.props.index}>\n        {(provided, snapshot) => (\n          <Container\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n            isDragging={snapshot.isDragging}\n          >\n            {this.props.task.content}\n          </Container>\n        )}\n      </Draggable>\n    );\n  }\n}\n","import \"./index.css\";\n\nimport { Droppable } from \"react-beautiful-dnd\";\nimport React from \"react\";\nimport Task from \"./Task\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  margin: 1em;\n  border: 1px solid lightgrey;\n  border-radius: 0.2em;\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n`;\nconst Title = styled.h3`\n  padding: 1em;\n`;\nconst TaskList = styled.div`\n  padding: 1em;\n  transition: background-color 0.2s ease;\n  background-color: ${(props) => (props.isDraggingOver ? \"skyblue\" : \"white\")};\n  flex-grow: 1;\n  min-height: 100px;\n`;\n\nexport default class Column extends React.Component {\n  render() {\n    return (\n      <Container>\n        <Title>{this.props.column.title}</Title>\n        <Droppable droppableId={this.props.column.id}>\n          {(provided, snapshot) => (\n            <TaskList\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n              isDraggingOver={snapshot.isDraggingOver}\n            >\n              {this.props.tasks.map((task, idx) => (\n                <Task key={task.id} task={task} index={idx} />\n              ))}\n              {provided.placeholder}\n            </TaskList>\n          )}\n        </Droppable>\n      </Container>\n    );\n  }\n}\n","const initialData = {\n  tasks: {\n    \"task-1\": { id: \"task-1\", content: \"Eat\" },\n    \"task-2\": { id: \"task-2\", content: \"Sleep\" },\n    \"task-3\": { id: \"task-3\", content: \"Party\" },\n    \"task-4\": { id: \"task-4\", content: \"Repeat\" },\n  },\n  columns: {\n    \"column-1\": {\n      id: \"column-1\",\n      title: \"To Do\",\n      taskIds: [\"task-1\", \"task-2\", \"task-3\", \"task-4\"],\n    },\n    \"column-2\": {\n      id: \"column-2\",\n      title: \"In progress\",\n      taskIds: [],\n    },\n    \"column-3\": {\n      id: \"column-3\",\n      title: \"Done\",\n      taskIds: [],\n    },\n  },\n  columnOrder: [\"column-1\", \"column-2\", \"column-3\"],\n};\n\nexport default initialData;\n","import \"./index.css\";\n\nimport Column from \"./Column\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport initialData from \"./initial-data\";\nimport styled from \"styled-components\";\nimport { useState } from \"react\";\n\nconst Container = styled.div`\n  display: flex;\n`;\n\nconst App = (props) => {\n  const [data, setData] = useState(initialData);\n\n  const onDragEnd = (result) => {\n    document.body.style.color = \"inherit\";\n    const { destination, source, draggableId } = result;\n\n    if (!destination) return;\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    const startingColumn = data.columns[source.droppableId];\n    const endingColumn = data.columns[destination.droppableId];\n\n    if (startingColumn === endingColumn) {\n      const newTaskIds = Array.from(startingColumn.taskIds);\n      newTaskIds.splice(source.index, 1);\n      newTaskIds.splice(destination.index, 0, draggableId);\n\n      const newColumn = { ...startingColumn, taskIds: newTaskIds };\n\n      const newData = {\n        ...data,\n        columns: {\n          ...data.columns,\n          [newColumn.id]: newColumn,\n        },\n      };\n\n      setData(newData);\n      return;\n    }\n\n    //moving from one list to another\n    const startTaskIds = Array.from(startingColumn.taskIds);\n    startTaskIds.splice(source.index, 1);\n    const newStart = {\n      ...startingColumn,\n      taskIds: startTaskIds,\n    };\n\n    const finishTaskIds = Array.from(endingColumn.taskIds);\n    finishTaskIds.splice(destination.index, 0, draggableId);\n\n    const newFinish = {\n      ...endingColumn,\n      taskIds: finishTaskIds,\n    };\n\n    const newData = {\n      ...data,\n      columns: {\n        ...data.columns,\n        [newStart.id]: newStart,\n        [newFinish.id]: newFinish,\n      },\n    };\n\n    setData(newData);\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Container>\n        {data.columnOrder.map((columnId) => {\n          const column = data.columns[columnId];\n          const tasks = column.taskIds.map((taskId) => data.tasks[taskId]);\n\n          return <Column key={column.id} column={column} tasks={tasks} />;\n        })}\n      </Container>\n    </DragDropContext>\n  );\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}